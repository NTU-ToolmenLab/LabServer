# install virtual for better debuging and somewhat (Optional)
sudo apt-get install python3-pip
sudo pip3 install virtualenv
virtualenv env
source env/bin/active

# You can create certs and key by Lets Encrypt it!
## You should open port 80 for veriation
docker run --rm -it -p 80:80 -v $(pwd)/letsencrypt:/etc/letsencrypt certbot/certbot certonly --standalone
cp letsencrypt/live/my.domain.ntu.edu.tw/* certs/

## or do optional one
cd certs
openssl genrsa 1024 > privkey.pem
chmod 400 privkey.pem
openssl req -new -x509 -nodes -sha1 -days 365 -key privkey.pem -out fullchain.pem
cd ..

# traefik
docker pull traefik

# build LoginWeb
cd LoginWeb
vim tzfserver/start.py # modify secrect_key and my.domain:443 and password
touch log
docker build . -t linnil1/tzfserver
touch database.db
docker run -it --rm -v $(pwd)/database.db:/app/database.db linnil1/tzfserver python3 -c 'from tzfserver import start;start.init_db();'
## Add user
docker run -it --rm -v $(pwd):/app/LoginWeb -v $(pwd)/database.db:/app/database.db linnil1/tzfserver python3 -c 'from tzfserver import start;start.add();'

## for bash input
### docker run -it --rm -v $(pwd):/app/LoginWeb -v $(pwd)/database.db:/app/database.db linnil1/tzfserver python3
### from tzfserver import start
### start.add_user(name, password)
### start.add_token(name, container_name)

# build saml
cd saml
vim settings.json # modify my.domain:443
cd ../..

# copy my_vnc
# ..

# Control docker to start or stop
cd DockerServer
docker build . -t linnil1/dockerserver
cd ..

# build example docker-firefox-vnc
cd UserDocker
docker build . -t linnil1/docker-firefox
cd ..

# build nextcloud
docker pull nextcloud:fpm
docker pull nginx
docker pull collabora/code
docker pull mariadb
cd Nextcloud
vim nginx.conf # modify server_name and error_page port
cd ..

# Build IDP
## you can see some difference of my version
## https://gist.github.com/linnil1/b782dc567b1f404efcdb71a643ddc7e4
cd IDP
git clone https://github.com/IdentityPython/pysaml2.git
vim idp_conf.py # modify my.domain:443
vim idp.py #  modify "redirect_uri": redirect_uri.replace("http","https").replace(":443",":443/saml")
docker build . -t linnil1/idp
cd ..

# modify docker-compose for
## 1. change host from 127.0.0.1 to my.domain
## 2. change port from 443 and 8888 if you want
## 3. nextcloud_db password
## 4. nextcloud external data path
vim docker-compose.yml

# After running
## NextCloud
### Go in to web https://my.domain.ntu.edu.tw:444
### Set admin and password, and choose mysql: hostname=nextclouddb, and the other are same as docker-compose written
### enable "collabora" (Set https://my.domain.ntu.edu.tw:444)
### enable "SSO & SAML authentication" and set like this
"""
"types": "authentication",
"type": "saml",
"general-idp0_display_name": "LoginName",
"general-allow_multiple_user_back_ends": "1",
"general-uid_mapping": "uid",
"saml-attribute-mapping-displayName_mapping": "uid",
"saml-attribute-mapping-quota_mapping": "quota",
"idp-entityId": "myEntityID",
"idp-singleSignOnService.url": "https:\/\/my.domain.ntu.edu.tw:443\/saml\/sso\/redirect",
"idp-singleLogoutService.url": "https:\/\/my.domain.ntu.edu.tw:443\/saml\/slo\/redirect",
"""
### enable external storage

# Add External Storage
cd Nextcloud
pip3 install requests
vim adduser.py # set user_list
python3 adduser.py
docker exec -it -u 1000 labserver_nextcloud_1 php occ files_external:import my_storages.json
cd ..
